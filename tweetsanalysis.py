# -*- coding: utf-8 -*-
"""TweetsAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I-D0QxZwEpQmP2RKByXjmzy_NmFJxCvz
"""

import tweepy
from textblob import TextBlob
from wordcloud import WordCloud
import pandas as pd
import numpy as np
import re
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

API_key = 'hJH6wvivGFVnbF6jls9pRTPQb'
API_key_secret = 'da3rrZQPZ2HEIyusBSOHZ00P75IpBRgJVO4tMbhabm51agZ2bX'
access_token = '1147592296600416256-Dz5vTP90ur97W8ff3Bh5mIM1s7ksmi'
secret_access_token = 'hxoub9sNnchgj5FCczTHlmFlNKw5eVkU5UXOvmzCdmfQ6'
bearer_token = 'AAAAAAAAAAAAAAAAAAAAAOXwNwEAAAAAsZQ6zg%2FyP%2FwmDpDLnI21ZchgoNk%3DWd7TqinZkwrxbHcluo6CoygLokDP7NP7RlzDLpjSlsfTOPxnKx'

consumerKey = API_key
consumerSecret = API_key_secret
accessToken = access_token
accessTokenSecret = secret_access_token

# Create the authentication object
authenticate = tweepy.OAuthHandler(consumerKey, consumerSecret)

# Set the access token and access token secret
authenticate.set_access_token(accessToken, accessTokenSecret)

# Creating the API object while passing in auth information
api = tweepy.API(authenticate, wait_on_rate_limit=True)

# Extract 100 tweets from the twitter user
posts = api.user_timeline(screen_name="BillGates", count = 100, lang ="en", tweet_mode="extended")

#  Print the last 5 tweets
print("Show the 5 recent tweets:\n")
i=1
for tweet in posts[:5]:
    print(str(i) +') '+ tweet.full_text + '\n')
    i= i+1

# Create a dataframe with a column called Tweets
df = pd.DataFrame([tweet.full_text for tweet in posts], columns=['Tweets'])
# Show the first 5 rows of data
df.head()

def cleanTxt(text):
    text = re.sub('@[A-Za-z0â€“9]+', '', text)  # Removing @mentions
    text = re.sub('#', '', text)  # Removing '#' hash tag
    text = re.sub('RT[\s]+', '', text)  # Removing RT
    text = re.sub('https?:\/\/\S+', '', text)  # Removing hyperlink

    return text
# Clean the tweets
df['Tweets'] = df['Tweets'].apply(cleanTxt)

# Show the cleaned tweets
df

# Create a function to get the subjectivity
def getSubjectivity(text):
   return TextBlob(text).sentiment.subjectivity

# Create a function to get the polarity
def getPolarity(text):
   return  TextBlob(text).sentiment.polarity


# Create two new columns 'Subjectivity' & 'Polarity'
df['Subjectivity'] = df['Tweets'].apply(getSubjectivity)
df['Polarity'] = df['Tweets'].apply(getPolarity)

# Show the new dataframe with columns 'Subjectivity' & 'Polarity'
df